
import java.io.BufferedReader;
import java.io.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author EKHTEAR
 */
public class Dashboards2 extends javax.swing.JFrame {
    
    Tosss tosss = new Tosss();
    
    
    public String bowlingTeamB=tosss.GetBattingTeam();
    public String batingTeamA=tosss.GetBowlingTeam();
    public String batingTeamPath;
    public String bowlingTeamPath;
    
    public static String batingTeamm;
    public static String bowlingTeamm;
    

    Dashboards db = new Dashboards();
    int Taarget, tOver;

    private int incrimentRuns = 0;

    private int incrimentballs = 0;
    private int incrimentover = 0;

    private int incrimentwicket = 0;

    private int individualRun = 0;
    private int individualBall = 0;
    private int individualRunB = 0;
    private int individualBallB = 0;
    private int individualBallB1 = 0;
    private int totalBall = 0;
    private int individualover = 0;
    private int bowlerWicket = 0;
    private int totalOver;
    private double netRunRate = 0.0;
    //private double estimatedRun=0;
    int totalRun = 0;
    int totalWicket = 0;

    /**
     * Creates new form Dashboards2
     */
    public Dashboards2() {

        initComponents();
        battingTeamPath();
        bowlingTeamPath();
        showTarget();
        txtInitial();
        showTotalOver();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTotalRun = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTotalWicket = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtOverRunning = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btn1Run = new javax.swing.JButton();
        btn2Run = new javax.swing.JButton();
        btn3Run = new javax.swing.JButton();
        btn4Run = new javax.swing.JButton();
        btn6Run = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtEstimatedRun = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnOut = new javax.swing.JButton();
        btnWide = new javax.swing.JButton();
        btnDotBall = new javax.swing.JButton();
        btbSave = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTarget = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTotalOver = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Second Innings Dashboard");

        jLabel1.setText("Total");

        txtTotalRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalRunActionPerformed(evt);
            }
        });

        jLabel2.setText("Wicket");

        txtTotalWicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalWicketActionPerformed(evt);
            }
        });

        jLabel3.setText("Over");

        txtOverRunning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOverRunningActionPerformed(evt);
            }
        });

        jPanel2.setToolTipText("");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        btn1Run.setText("1 Run");
        btn1Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1RunActionPerformed(evt);
            }
        });

        btn2Run.setText("2 Runs");
        btn2Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2RunActionPerformed(evt);
            }
        });

        btn3Run.setText("3 Runs");
        btn3Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3RunActionPerformed(evt);
            }
        });

        btn4Run.setText("4 Runs");
        btn4Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4RunActionPerformed(evt);
            }
        });

        btn6Run.setText("6 Runs");
        btn6Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6RunActionPerformed(evt);
            }
        });

        jLabel5.setText("Estimated Runs");

        txtEstimatedRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstimatedRunActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163))
        );

        btnOut.setText("Out");
        btnOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutActionPerformed(evt);
            }
        });

        btnWide.setText("Wide");
        btnWide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWideActionPerformed(evt);
            }
        });

        btnDotBall.setText("Dot Ball");
        btnDotBall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDotBallActionPerformed(evt);
            }
        });

        btbSave.setText("Save");
        btbSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbSaveActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Target");

        txtTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTargetActionPerformed(evt);
            }
        });

        jLabel6.setText("Total Over");

        txtTotalOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalOverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(txtTotalRun, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2)
                        .addGap(43, 43, 43)
                        .addComponent(txtTotalWicket, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtOverRunning, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(txtEstimatedRun, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTotalOver, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(btn1Run, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn2Run, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn3Run, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn4Run, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn6Run, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnWide, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnOut, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(btnDotBall, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(494, 494, 494)
                        .addComponent(btbSave, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTotalRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtTotalWicket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtOverRunning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtEstimatedRun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTarget, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtTotalOver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(119, 119, 119)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn1Run, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn2Run, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn3Run, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn4Run, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn6Run, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnWide, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOut, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDotBall, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)))
                .addComponent(btbSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void battingTeamPath(){
        if(batingTeamA=="Bangladesh"){
            batingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BattingTeams\\BangladeshiBatsman.txt";
        }
        else if(batingTeamA=="England"){
            batingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BattingTeams\\EnglandBatsman.txt";
        }
        else if(batingTeamA=="Australia"){
            batingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BattingTeams\\AustraliaBatsman.txt";
        }
        else if(batingTeamA=="India"){
            batingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BattingTeams\\IndianBatsman.txt";
        }
        else if(batingTeamA=="Sri Lanka"){
            batingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BattingTeams\\SriLankanBatsman.txt";
        }
        else{
            
            JOptionPane.showMessageDialog(null, "Somethong Wrong", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        }
        
        
        
        
    }
    
    public void bowlingTeamPath(){
        if(bowlingTeamB=="Bangladesh"){
            bowlingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BowlingTeams\\BangladeshiBowlers.txt";
        }
        else if(bowlingTeamB=="England"){
            bowlingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BowlingTeams\\EnglandBowlers.txt";
        }
        else if(bowlingTeamB=="Australia"){
            bowlingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BowlingTeams\\AustralianBowlers.txt";
        }
        else if(bowlingTeamB=="India"){
            bowlingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BowlingTeams\\IndianBowlers.txt";
        }
        else if(bowlingTeamB=="Sri Lanka"){
            bowlingTeamPath="C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\Files\\BowlingTeams\\SriLankanBowlers.txt";
        }
        else{
            
            JOptionPane.showMessageDialog(null, "Somethong Wrong", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        }
        
        
        
    }
    
    
    public void showTarget() {
        Taarget = db.GetTarget();
        String target;
        target = String.format("%d", Taarget);
        txtTarget.setText(target);

    }

    public void showTotalOver() {
        tOver = db.GetTotalOver();
        totalOver = tOver;
        String targetOver;
        targetOver = String.format("%d", tOver);
        txtTotalOver.setText(targetOver);

    }

    /* public void estimateRun(){
        if(incrimentRuns>=1){
        int a = 0;
        netRunRate=(incrimentRuns*6)/totalBall;
       // estimatedRun=(int)(netRunRate*totalOver);
        a= (int)(netRunRate*totalOver);
        
        String estimatedR;
        estimatedR = String.format("%d", a);
        txtEstimatedRun.setText(estimatedR);
        }
        else{
            
        }
    }*/
    private void txtInitial() {
        Shorashori();
        shoBowlersDate();

        String TRun;
        TRun = String.format("%d", totalRun);
        txtTotalRun.setText(TRun);

        // String TOver;
        //  TOver = String.format("%.1f", totalOver);
        //   txtOverRunning.setText(TOver);
        String TWicket;
        TWicket = String.format("%d", totalWicket);
        txtTotalWicket.setText(TWicket);

    }

    public void AlreadyOut() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        if (model.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

        }
    }

    public void Shorashori() {

        File file = new File(batingTeamPath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setColumnIdentifiers(columnsName);

            // get lines from txt file
            Object[] tableLines = br.lines().toArray();

            // extratct data from lines
            // set data to jtable model
            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);
            }

        } catch (Exception ex) {
            Logger.getLogger(Dashboards2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void shoBowlersDate() {
        File file = new File(bowlingTeamPath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setColumnIdentifiers(columnsName);

            // get lines from txt file
            Object[] tableLines = br.lines().toArray();

            // extratct data from lines
            // set data to jtable model
            for (int i = 0; i < tableLines.length; i++) {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                model.addRow(dataRow);
            }

        } catch (Exception ex) {
            Logger.getLogger(Dashboards2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    private void txtTotalWicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalWicketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalWicketActionPerformed

    private void btn1RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1RunActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();

        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        } else {
            incrimentRuns += 1;
            totalBall++;

            String oneRuns;
            oneRuns = String.format("%d", incrimentRuns);
            txtTotalRun.setText(oneRuns);

            if (incrimentballs == 6) {
                incrimentover++;
                incrimentballs = 0;
            } else {
                incrimentballs += 1;
            }

            String Ball, Over;
            Ball = String.format("%d", incrimentballs);
            Over = String.format("%d", incrimentover);
            txtOverRunning.setText(Over + "." + Ball);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            individualBall += 0.1;
            model.setValueAt(++individualRun, jTable1.getSelectedRow(), 1);
            model.setValueAt(++individualBall, jTable1.getSelectedRow(), 2);
            double hudai = (100.0 * individualRun) / individualBall;
            String hudai2;
            hudai2 = String.format("%.2f", hudai);
            model.setValueAt(hudai2, jTable1.getSelectedRow(), 3);
            individualBallB1++;
            individualBallB++;
            if (individualBallB == 6) {
                individualover++;
                individualBallB = 0;
            }

            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
            model2.setValueAt(++individualRunB, jTable2.getSelectedRow(), 2);
            double hudai3 = (6.0 * individualRunB) / individualBallB1;
            String hudai4;
            hudai4 = String.format("%.2f", hudai3);

            model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);
            model.setValueAt("Not Out", jTable1.getSelectedRow(), 4);

            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }

            }
        }

    }//GEN-LAST:event_btn1RunActionPerformed

    private void btn2RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2RunActionPerformed
        // TODO add your handling code here:
        //if(jButton8.isSelected() && jButton9.isSelected()){

        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();

        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        } else {

            incrimentRuns += 2;
            totalBall++;

            String twoRuns;
            twoRuns = String.format("%d", incrimentRuns);
            txtTotalRun.setText(twoRuns);

            incrimentballs += 1;
            if (incrimentballs == 6) {
                incrimentover++;
                incrimentballs = 0;

            }

            String Ball, Over;
            Ball = String.format("%d", incrimentballs);
            Over = String.format("%d", incrimentover);
            txtOverRunning.setText(Over + "." + Ball);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //model.setValueAt(0,jTable1.getSelectedRow(),0);
            model.setValueAt(individualRun += 2, jTable1.getSelectedRow(), 1);
            model.setValueAt(++individualBall, jTable1.getSelectedRow(), 2);

            double hudai = (100.0 * individualRun) / individualBall;
            String hudai2;
            hudai2 = String.format("%.2f", hudai);

            model.setValueAt(hudai2, jTable1.getSelectedRow(), 3);
            individualBallB1++;
            individualBallB++;
            if (individualBallB == 6) {
                individualover++;
                individualBallB = 0;
            }

            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
            model2.setValueAt(individualRunB += 2, jTable2.getSelectedRow(), 2);
            double hudai3 = (6.0 * individualRunB) / individualBallB1;
            String hudai4;
            hudai4 = String.format("%.2f", hudai3);

            model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);

            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }
                //   estimateRun();

                //  }
                //  else{
                // JOptionPane.showMessageDialog(null, "Select A Batsman And A Bowler Please!!! ","ERROR !!!",JOptionPane.ERROR_MESSAGE);
                // }
            }
        }


    }//GEN-LAST:event_btn2RunActionPerformed

    private void btn3RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3RunActionPerformed
        // TODO add your handling code here:
        //if(jButton8.isSelected() && jButton9.isSelected()){

        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();

        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        } else {

            incrimentRuns += 3;
            totalBall++;

            String threeRuns;
            threeRuns = String.format("%d", incrimentRuns);
            txtTotalRun.setText(threeRuns);

            incrimentballs += 1;
            if (incrimentballs == 6) {
                incrimentover++;
                incrimentballs = 0;

            }

            String Ball, Over;
            Ball = String.format("%d", incrimentballs);
            Over = String.format("%d", incrimentover);
            txtOverRunning.setText(Over + "." + Ball);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //model.setValueAt(0,jTable1.getSelectedRow(),0);
            model.setValueAt(individualRun += 3, jTable1.getSelectedRow(), 1);
            model.setValueAt(++individualBall, jTable1.getSelectedRow(), 2);

            double hudai = (100.0 * individualRun) / individualBall;
            String hudai2;
            hudai2 = String.format("%.2f", hudai);

            model.setValueAt(hudai2, jTable1.getSelectedRow(), 3);
            individualBallB1++;
            individualBallB++;
            if (individualBallB == 6) {
                individualover++;
                individualBallB = 0;
            }

            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
            model2.setValueAt(individualRunB += 3, jTable2.getSelectedRow(), 2);
            double hudai3 = (6.0 * individualRunB) / individualBallB1;
            String hudai4;
            hudai4 = String.format("%.2f", hudai3);

            model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);
//                estimateRun();
            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }

                //  }
                // else{
                //  JOptionPane.showMessageDialog(null, "Select A Batsman And A Bowler Please!!! ","ERROR !!!",JOptionPane.ERROR_MESSAGE);
                // }
            }
        }
    }//GEN-LAST:event_btn3RunActionPerformed

    private void btn4RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4RunActionPerformed
        // TODO add your handling code here:
        //if(jButton8.isSelected() && jButton9.isSelected()){

        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();

        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        } else {

            incrimentRuns += 4;
            totalBall++;

            String fourRuns;
            fourRuns = String.format("%d", incrimentRuns);
            txtTotalRun.setText(fourRuns);

            incrimentballs += 1;
            if (incrimentballs == 6) {
                incrimentover++;
                incrimentballs = 0;

            }

            String Ball, Over;
            Ball = String.format("%d", incrimentballs);
            Over = String.format("%d", incrimentover);
            txtOverRunning.setText(Over + "." + Ball);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //model.setValueAt(0,jTable1.getSelectedRow(),0);
            model.setValueAt(individualRun += 4, jTable1.getSelectedRow(), 1);
            model.setValueAt(++individualBall, jTable1.getSelectedRow(), 2);

            double hudai = (100.0 * individualRun) / individualBall;
            String hudai2;
            hudai2 = String.format("%.2f", hudai);

            model.setValueAt(hudai2, jTable1.getSelectedRow(), 3);
            individualBallB1++;
            individualBallB++;
            if (individualBallB == 6) {
                individualover++;
                individualBallB = 0;
            }

            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
            model2.setValueAt(individualRunB += 4, jTable2.getSelectedRow(), 2);
            double hudai3 = (6.0 * individualRunB) / individualBallB1;
            String hudai4;
            hudai4 = String.format("%.2f", hudai3);

            model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);
//                estimateRun();

            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }

                //  }
                //  else{
                //      JOptionPane.showMessageDialog(null, "Select A Batsman And A Bowler Please!!! ","ERROR !!!",JOptionPane.ERROR_MESSAGE);
                //    }
            }
        }
    }//GEN-LAST:event_btn4RunActionPerformed

    private void btn6RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6RunActionPerformed
        // TODO add your handling code here:
        //  if(jButton8.isSelected() && jButton9.isSelected()){

        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();

        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        } else {

            incrimentRuns += 6;
            totalBall++;

            String sixRuns;
            sixRuns = String.format("%d", incrimentRuns);
            txtTotalRun.setText(sixRuns);

            incrimentballs += 1;
            if (incrimentballs == 6) {
                incrimentover++;
                incrimentballs = 0;

            }

            String Ball, Over;
            Ball = String.format("%d", incrimentballs);
            Over = String.format("%d", incrimentover);
            txtOverRunning.setText(Over + "." + Ball);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //model.setValueAt(0,jTable1.getSelectedRow(),0);
            model.setValueAt(individualRun += 6, jTable1.getSelectedRow(), 1);
            model.setValueAt(++individualBall, jTable1.getSelectedRow(), 2);

            double hudai = (100.0 * individualRun) / individualBall;
            String hudai2;
            hudai2 = String.format("%.2f", hudai);

            model.setValueAt(hudai2, jTable1.getSelectedRow(), 3);
            individualBallB1++;
            individualBallB++;
            if (individualBallB == 6) {
                individualover++;
                individualBallB = 0;
            }

            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
            model2.setValueAt(individualRunB += 6, jTable2.getSelectedRow(), 2);
            double hudai3 = (6.0 * individualRunB) / individualBallB1;
            String hudai4;
            hudai4 = String.format("%.2f", hudai3);

            model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);
//                estimateRun();
            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }

                //   }
                // else{
                //    JOptionPane.showMessageDialog(null, "Select A Batsman And A Bowler Please!!! ","ERROR !!!",JOptionPane.ERROR_MESSAGE);
                // }
            }
        }
    }//GEN-LAST:event_btn6RunActionPerformed

    private void btnWideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWideActionPerformed
        // TODO add your handling code here:
        //  if(jButton8.isSelected() && jButton9.isSelected()){

        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();
        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Select A New Batsman!!!", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

        } else {

            incrimentRuns += 1;

            String wideRuns;
            wideRuns = String.format("%d", incrimentRuns);
            txtTotalRun.setText(wideRuns);

            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
            model2.setValueAt(++individualRunB, jTable2.getSelectedRow(), 2);
            double hudai3 = (6.0 * individualRunB) / individualBallB1;
            String hudai4;
            hudai4 = String.format("%.2f", hudai3);

            model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);
//                estimateRun();

            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }

                // }
                // else{
                // JOptionPane.showMessageDialog(null, "Select A Batsman And A Bowler Please!!! ","ERROR !!!",JOptionPane.ERROR_MESSAGE);
                // }
            }
        }
    }//GEN-LAST:event_btnWideActionPerformed

    private void btnOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutActionPerformed
        // TODO add your handling code here:

        // if(jButton8.isSelected() && jButton9.isSelected()){
        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();

        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        } else {

            totalBall++;
            individualRun = 0;
            individualBall = 0;
            if (incrimentwicket == 10) {
                JOptionPane.showMessageDialog(null, "All Out!!!! ", "ERROR !!!", JOptionPane.ERROR_MESSAGE);

            } else {
                ++incrimentwicket;

                String wicket;
                wicket = String.format("%d", incrimentwicket);
                txtTotalWicket.setText(wicket);

                incrimentballs += 1;
                if (incrimentballs == 6) {
                    incrimentover++;
                    incrimentballs = 0;

                }

                String Ball, Over;
                Ball = String.format("%d", incrimentballs);
                Over = String.format("%d", incrimentover);
                txtOverRunning.setText(Over + "." + Ball);

                individualBallB1++;
                individualBallB++;
                if (individualBallB == 6) {
                    individualover++;
                    individualBallB = 0;
                }

                DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
                model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
                model2.setValueAt(individualRunB, jTable2.getSelectedRow(), 2);
                double hudai3 = (6.0 * individualRunB) / individualBallB1;
                String hudai4;
                hudai4 = String.format("%.2f", hudai3);

                model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);

                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setValueAt("Out", jTable1.getSelectedRow(), 4);
                model2.setValueAt(++bowlerWicket, jTable2.getSelectedRow(), 4);
            }

            // estimateRun();
            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }

                //   }
                //  else{
                //       JOptionPane.showMessageDialog(null, "Select A Batsman And A Bowler Please!!! ","ERROR !!!",JOptionPane.ERROR_MESSAGE);
                //   }
                //
            }
        }


    }//GEN-LAST:event_btnOutActionPerformed

    private void btnDotBallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDotBallActionPerformed
        // TODO add your handling code here:

        //  if(jButton8.isSelected() && jButton9.isSelected()){
        DefaultTableModel model3 = (DefaultTableModel) jTable1.getModel();

        if (model3.getValueAt(jTable1.getSelectedRow(), 4) == "Out") {
            JOptionPane.showMessageDialog(null, "Alredy Out", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
        } else {

            incrimentRuns += 0;
            totalBall++;

            String oneRuns;
            oneRuns = String.format("%d", incrimentRuns);
            txtTotalRun.setText(oneRuns);

            incrimentballs += 1;
            if (incrimentballs == 6) {
                incrimentover++;
                incrimentballs = 0;

            }

            String Ball, Over;
            Ball = String.format("%d", incrimentballs);
            Over = String.format("%d", incrimentover);
            txtOverRunning.setText(Over + "." + Ball);

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            //model.setValueAt(0,jTable1.getSelectedRow(),0);
            model.setValueAt(individualRun, jTable1.getSelectedRow(), 1);
            model.setValueAt(++individualBall, jTable1.getSelectedRow(), 2);
            double hudai = (100.0 * individualRun) / individualBall;
            String hudai2;
            hudai2 = String.format("%.2f", hudai);
            model.setValueAt(hudai2, jTable1.getSelectedRow(), 3);

            individualBallB1++;
            individualBallB++;
            if (individualBallB == 6) {
                individualover++;
                individualBallB = 0;
            }

            DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
            model2.setValueAt(individualover + "." + individualBallB, jTable2.getSelectedRow(), 1);
            model2.setValueAt(individualRunB, jTable2.getSelectedRow(), 2);
            double hudai3 = (6.0 * individualRunB) / individualBallB1;
            String hudai4;
            hudai4 = String.format("%.2f", hudai3);

            model2.setValueAt(hudai4, jTable2.getSelectedRow(), 3);
            //   }
            // else{
            //JOptionPane.showMessageDialog(null, "Select A Batsman And A Bowler Please!!! ","ERROR !!!",JOptionPane.ERROR_MESSAGE);
            //  }
//        estimateRun();

            if (incrimentRuns >= Taarget) {
                JOptionPane.showMessageDialog(null, "2nd team win", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
            }
            if (totalBall == tOver * 6) {
                if (incrimentRuns == Taarget - 1) {
                    JOptionPane.showMessageDialog(null, "Tie", "ERROR !!!", JOptionPane.WARNING_MESSAGE);
                } else if (incrimentRuns < Taarget) {
                    JOptionPane.showMessageDialog(null, "1st team wins ", "ERROR !!!", JOptionPane.WARNING_MESSAGE);

                }

            }

        }

    }//GEN-LAST:event_btnDotBallActionPerformed

    private void btbSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbSaveActionPerformed

        Date date = new Date();

        String fileName = date.getDate() + "_" + date.getHours() + "_" + date.getMinutes() + "_" + date.getSeconds() + "_";

        File file;
        file = new File("C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\" + fileName + "BatsmanSave1.txt");
        try {
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < jTable1.getRowCount(); i++) {//rows
                for (int j = 0; j < jTable1.getColumnCount(); j++) {//columns
                    bw.write(jTable1.getValueAt(i, j).toString() + " ");
                }
                bw.newLine();
            }

            bw.close();
            fw.close();

        } catch (IOException ex) {
            // Logger.getLogger(JTable_import_and_export_to_text_file.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Date date = new Date();
        File file21;
        file21 = new File("C:\\Users\\DELL\\Desktop\\27954\\Dashboard\\src\\"+fileName+"BowlerSAve1.txt");
        try {
            FileWriter fw21 = new FileWriter(file21);
            BufferedWriter bw21 = new BufferedWriter(fw21);

            for (int i = 0; i < jTable2.getRowCount(); i++) {//rows
                for (int j = 0; j < jTable2.getColumnCount(); j++) {//columns
                    bw21.write(jTable2.getValueAt(i, j).toString() + " ");
                }
                bw21.newLine();
            }

            bw21.close();
            fw21.close();

        } catch (IOException ex) {
            // Logger.getLogger(JTable_import_and_export_to_text_file.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btbSaveActionPerformed

    private void txtOverRunningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOverRunningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOverRunningActionPerformed

    private void txtEstimatedRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstimatedRunActionPerformed
        // TODO add your handling code here:

        // txtEstimatedRun.getText();
    }//GEN-LAST:event_txtEstimatedRunActionPerformed

    private void txtTotalRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalRunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalRunActionPerformed

    private void txtTotalOverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalOverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalOverActionPerformed

    private void txtTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTargetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTargetActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbSave;
    private javax.swing.JButton btn1Run;
    private javax.swing.JButton btn2Run;
    private javax.swing.JButton btn3Run;
    private javax.swing.JButton btn4Run;
    private javax.swing.JButton btn6Run;
    private javax.swing.JButton btnDotBall;
    private javax.swing.JButton btnOut;
    private javax.swing.JButton btnWide;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtEstimatedRun;
    private javax.swing.JTextField txtOverRunning;
    private javax.swing.JTextField txtTarget;
    private javax.swing.JTextField txtTotalOver;
    private javax.swing.JTextField txtTotalRun;
    private javax.swing.JTextField txtTotalWicket;
    // End of variables declaration//GEN-END:variables

}
